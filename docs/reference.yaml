---
- tag: x-with
  arguments:
  - default: $
    name: source
    templated: true
  description: |
    Include content block if variable is truthy. Sets the variable of children to the target if it is supplied.

    x-with can be thought of as a shorthand for x-use together with x-if.

  example: |
    <x-json target="dog" >
      {
        "name": "Freddy"
      }
    </x-json>

    <x-with source="name" >
      <p>This will display the name : $ </p>
    </x-with>

    <x-with source="phone_number" >
      <p>This would not display anything</p>
    </x-with>

- tag: x-use
  arguments:
  - name: source
    templated: true
  description: Set the current var to be 'source' for all children.

- tag: x-if/x-unless
  arguments:
  - name: eq
    optional: true
    templated: true
  - name: lt
    optional: true
    templated: true
  - name: lte
    optional: true
    templated: true
  - name: gt
    optional: true
    templated: true
  - name: gte
    optional: true
    templated: true
  - default: $
    name: source
    templated: true
  description: Logic and stuff.

- tag: x-json
  arguments:
  - name: target
  - name: src
    optional: true
  description: Create a new variable at target from a json body or using the src argument

- tag: x-yaml
  arguments:
  - name: target
  - name: src
  description: |
    Create a new variable at target from a yaml document specified by the src argument.

    Cannot use a body due to confusing indenting.

- tag: x-markdown
  arguments:
  - name: src
  description: |
    Load in-place a markdown document.

    This is currently not templated at all.

- tag: x-sql
  arguments:
  - name: target
  - name: single-row
    optional: true
  - name: loader-only
    optional: true
  description: Execute sql query and set a new variable at target

- tag: x-sql-action
  form-ony: true
  arguments:
  - name: target
  - name: single-row
    optional: true
  description: Execute sql query inside a form action. When rendering the page this
    statement is skipped.

- tag: x-nodejs
  arguments:
  - name: target
  - name: loader-only
    optional: true
  description: Embed a nodejs function and set target to the return value

- tag: x-dump
  description: Dump the current variable as json inside a pre tag

- tag: x-hint-port
  arguments:
  - default: "3000"
    name: port
  description: A hint to the siskin engine to listen on this port

- tag: x-page
  arguments:
  - name: path
  description: Define a page within the document.

- tag: x-expose
  arguments:
  - name: path
  - name: content-type
    optional: true
  - name: src
  description: Expose a file specified at (src) at http (path)
  special: true

- description: The default content to show when no other page has been matched.
  tag: x-default-page

- tag: x-setcookie-action
  form-ony: true
  arguments:
  - name: name
    templated: true
  - name: value
    templated: true
  - name: max-seconds
  - name: max-minutes
  - name: max-hours
  - name: max-days
  description: |
    Set a response cookie inside an action.

    The maximum cookie age will be set to the sum of the max-* attribute values.

- tag: x-include
  description: Include an external siskin-xml file. This tag is processed before anything
    else.
  pre-process: true

- tag: form
  arguments:
  - name: x-name
    description: "The endpoint name to create for this action"
  - name: x-ajax
    description: "Strip out the method and action for this form"
  description: |
    Although form is an inbuilt tag we do alter it's behaviour. Defining a form with
    method="POST" and an x-name attribute will create an action endpoint.

- tag: x-pass
  description: |
    This tag allows you to pass-over a value context to avoid executing loader
    actions inside the chain of a form. Also stops any variables declared inside
    from leaking out.

    In the exmaple only `out:` would be renderered as the $foo value is scoped to the x-pass.
  example: |
    <x-pass>
      <x-json target="foo" >22</x-json>
    </x-pass>
    out:$foo

- tag: x-catch
  description: |
    Rendered when an error has occured. The root variables `$.error.code` and `$.error.message`
    will be available to display.

- tag: x-try
  description: |
    Rendered when no error has occured. Useful when a section may result in an error.

- tag: x-return-code
  actionVariant: true
  arguments:
  - name: code
    description: "Return code to send. Must be numeric."
    templated: true
  description: |
    Set the return code. If the code is a HTTP error code then you may enter the error filter.

- tag: x-redirect-action
  arguments:
  - name: path
    description: "Path to redirect to"
    templated: true
  description:
    Redirect the client to the specied path.
